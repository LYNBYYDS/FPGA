#include xgpio.h
#include xparameters.h
#include IP_Centrale_DCC.h
#include xil_io.h

int main()
{
	 Componant GPIO
		XGpio sw_btn, led;

	 Inisialization of the ports
		XGpio_Initialize(&sw_btn, XPAR_SW_BP_DEVICE_ID);
		XGpio_Initialize(&led, XPAR_LED_DEVICE_ID);

	 Set sw bp to input & led to output
		XGpio_SetDataDirection(&sw_btn,1,1);
		XGpio_SetDataDirection(&sw_btn,2,1);
		XGpio_SetDataDirection(&led,1,0);

	 stat of btn
		int stat_btn = 0;
		int stat_btn_pre = 0;

	 Trame parts
		int address;
		int command0;
		int command1;
		int xor_command;
		long trame;


	 Function type
		 Function changeing speed  0
		 Function F0-F4			 1
		 Function F5-F12			 2
		 Function F13-F20			 3
		int type_Function;


				 LED
					 LED trigger
						 0 - 3  Function changing speed
						 0, 1, 3  Function F0 - F20
						int led_index = 0;
						int led_value = 0;

					 Each led setting
						 Setting0  function type
						 Function changing speed  0
						 Function F0 - F20  1-21
						int led_setting0= 0;
						 Setting1  train address
						int led_setting1 = 1;
						 Setting2  train direction
						int led_setting2 = 1;
						 Setting3  speed setting or ONOFF
						int led_setting3 = 0;

	while(1)
	{

		stat_btn = XGpio_DiscreteRead(&sw_btn, 2);

		if ((stat_btn & 0x1) != (stat_btn_pre & 0x1) && (stat_btn & 0x1) == 1)  Btn C pressed
		{
			if (led_setting0 == 0){ Function changings speed
				command0 = 0x40 + ((led_setting2&0x1)5) + led_setting3;
				xor_command = led_setting1 ^ command0;
				trame = (xor_command1) + (command010) + (address19);
			}else if (led_setting0  0 && led_setting0 = 5){ Function F0-F4
				if (led_setting0 == 1){ F0
					if (led_setting3 == 1){
						command0 = 0x80 + 0x10;
					}else{
						command0 = 0x80;
					}
				}else if (led_setting0 == 2){ F1
					if (led_setting3 == 1){
						command0 = 0x80 + 0x01;
					}else{
						command0 = 0x80;
					}
				}else if (led_setting0 == 3){ F2
					if (led_setting3 == 1){
						command0 = 0x80 + 0x01;
					}else{
						command0 = 0x80;
					}
				}
			}
		}
		if ((stat_btn1 & 0x1) != (stat_btn_pre1 & 0x1) && (stat_btn1 & 0x1) == 1)  Btn U pressed
		{
			if (led_index == 0) {
				if (led_setting0 = 21){
					led_setting0 = led_setting0 + 1;
					led_setting2 = 0;
					led_setting3 = 0;
				}
			}else if (led_index == 1){
				if (led_setting1 = 5){
					led_setting1 = led_setting1 + 1;
				}
			}else if (led_index == 2){
				if (led_setting2 == 0){
					led_setting2 = 1;
				}
			}else if (led_index == 3){
				if (led_setting0 == 0){
					if (led_setting3  31){
						led_setting3 = led_setting3 + 1;
					}
				}else{
					if (led_setting3 == 0){
						led_setting3 = 1;
					}
				}
			}
		}
		if ((stat_btn2 & 0x1) != (stat_btn_pre2 & 0x1) && (stat_btn2 & 0x1) == 1)  Btn L pressed
		{
			if (led_index == 3 && led_setting0 == 0) {
				led_index = 2;
			}else if (led_index == 3 && led_setting0 != 0){
				led_index = 1;
			}else if (led_index == 2){
				led_index = 1;
			}else if (led_index == 1){
				led_index = 0;
			}
		}
		if ((stat_btn3 & 0x1) != (stat_btn_pre3 & 0x1) && (stat_btn3 & 0x1) == 1)  Btn R pressed
		{
			if (led_index == 0) {
				led_index = 1;
			}else if (led_index == 1 && led_setting0 == 0){
				led_index = 2;
			}else if (led_index == 1 && led_setting0 != 0){
				led_index = 3;
			}else if (led_index == 2){
				led_index = 3;
			}
		}
		if ((stat_btn4 & 0x1) != (stat_btn_pre4 & 0x1) && (stat_btn4 & 0x1) == 1)  Btn D pressed
		{
			if (led_index == 0) {
				if (led_setting0 = 0){
					led_setting0 = led_setting0 - 1;
					led_setting2 = 1;
					led_setting3 = 0;
						}
					}else if (led_index == 1){
						if (led_setting1 = 0){
							led_setting1 = led_setting1 - 1;
						}
					}else if (led_index == 2){
						if (led_setting2 == 1){
							led_setting2 = 0;
						}
					}else if (led_index == 3){
						if (led_setting0 == 0){
							if (led_setting3  0){
								led_setting3 = led_setting3 - 1;
							}
						}else{
							if (led_setting3 == 1){
								led_setting3 = 0;
							}
						}
					}
				}
		XGpio_DiscreteWrite(&led, 1, value & 0xF);

		for(int i = 0; i  750000; )
				{
					i ++;
				}
		stat_btn_pre = stat_btn;
		led_value = (led_setting3  3) + (led_setting2  8) + (led_setting1  9) + (led_setting0  12);
		XGpio_DiscreteWrite(&led, 1, led_value & 0xFFFF);
	}
	return 0;
}
