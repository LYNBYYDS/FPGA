#include "xgpio.h"
#include "xparameters.h"


XGpio led_switch, button;
// button L C R

void inc_cpt(int *cpt){
	cpt == 16 ? cpt+1 : 0;
}


int main () {
XGpio_Initialize(&led_switch, XPAR_LED_SWITCH_DEVICE_ID);
XGpio_Initialize(&button, XPAR_BOUTONS_DEVICE_ID);

XGpio_SetDataDirection(&led_switch, 1, 0xF);
XGpio_SetDataDirection(&led_switch, 2, 0);
XGpio_SetDataDirection(&button, 1, 0x7);

int clignoter = 1;
int bp_c_pre, bp_l_pre, bp_r_pre= 1;
int bp_c_now, bp_l_now, bp_r_now;
int cpt_dev;
int cpt = 0;
int cpt_dev1, cpt_dev2, cpt_dev3;
int cpt_led = 0;

while(1) {

	// if the interrtupter 0 is releve then blink

	//the first bit of the switch is 1
	if( XGpio_DiscreteRead(&led_switch, 1) & 0x1 ){
		if (clignoter == 1) {
			XGpio_DiscreteSet(&led_switch, 2, 0xFF00);
		}else{
			XGpio_DiscreteClear(&led_switch, 2, 0xFF00);
		}
	}else {// if the interrtupter 0 is not releve then always close
		XGpio_DiscreteClear(&led_switch, 2, 0xFF00);
	}

	bp_l_now = (XGpio_DiscreteRead(&button, 1)>>2) & 0x1;
	bp_c_now = (XGpio_DiscreteRead(&button, 1)>>1) & 0x1;
	bp_r_now = (XGpio_DiscreteRead(&button, 1)) & 0x1;



	//the second bit of the switch is 1
	cpt_dev1 = cpt/2;
	cpt_dev2 = cpt_dev1/2;
	cpt_dev3 = cpt_dev2/2;

	if( XGpio_DiscreteRead(&led_switch, 1) & 0x2 ){
		XGpio_DiscreteClear(&led_switch, 2, 0x000F);
		if(cpt%2){
			XGpio_DiscreteSet(&led_switch, 2, 0x0001);
		}
		if(cpt_dev1%2){
			XGpio_DiscreteSet(&led_switch, 2, 0x0002);
		}
		if(cpt_dev2%2){
			XGpio_DiscreteSet(&led_switch, 2, 0x0004);
		}
		if(cpt_dev3%2){
			XGpio_DiscreteSet(&led_switch, 2, 0x0008);
		}
		// if press button c then change value of cpt
		if( (bp_c_now != bp_c_pre) && (!bp_c_now) ){
			cpt = cpt >= 15 ? 0 : cpt + 1;
		}

		// if press button l then turn on led 4-7
		if( (bp_l_now != bp_l_pre) && (!bp_l_now) ){
			XGpio_DiscreteSet(&led_switch, 2, 0x00F0);
		}

		// if press button r then turn off led 4-7
		if( (bp_r_now != bp_r_pre) && (!bp_r_now) ){
			XGpio_DiscreteClear(&led_switch, 2, 0x00F0);
		}
	}else if( !(XGpio_DiscreteRead(&led_switch, 1) & 0x2) ){
			XGpio_DiscreteClear(&led_switch, 2, 0x00FF);
	}


	cpt_led = cpt_led == 49 ? 0 : cpt_led + 1;

	if (cpt_led == 0) {
		clignoter = clignoter == 0 ? 1 : 0;			// inverse light value
	}

	bp_l_pre = bp_l_now;
	bp_c_pre = bp_c_now;
	bp_r_pre = bp_r_now;

	for(int i = 0; i < 80000; ){
		i = i + 1;
	} // function delay
}
return 0;
}
